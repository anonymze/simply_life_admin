/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admins: AdminAuthOperations;
    'app-users': AppUserAuthOperations;
  };
  blocks: {};
  collections: {
    admins: Admin;
    'supplier-categories': SupplierCategory;
    contacts: Contact;
    fidnet: Fidnet;
    suppliers: Supplier;
    fundesys: Fundesy;
    media: Media;
    reservations: Reservation;
    'supplier-products': SupplierProduct;
    'contact-categories': ContactCategory;
    'app-users': AppUser;
    'agency-life': AgencyLife;
    'chat-rooms': ChatRoom;
    messages: Message;
    signatures: Signature;
    'temporary-app-users': TemporaryAppUser;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    admins: AdminsSelect<false> | AdminsSelect<true>;
    'supplier-categories': SupplierCategoriesSelect<false> | SupplierCategoriesSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    fidnet: FidnetSelect<false> | FidnetSelect<true>;
    suppliers: SuppliersSelect<false> | SuppliersSelect<true>;
    fundesys: FundesysSelect<false> | FundesysSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    reservations: ReservationsSelect<false> | ReservationsSelect<true>;
    'supplier-products': SupplierProductsSelect<false> | SupplierProductsSelect<true>;
    'contact-categories': ContactCategoriesSelect<false> | ContactCategoriesSelect<true>;
    'app-users': AppUsersSelect<false> | AppUsersSelect<true>;
    'agency-life': AgencyLifeSelect<false> | AgencyLifeSelect<true>;
    'chat-rooms': ChatRoomsSelect<false> | ChatRoomsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    signatures: SignaturesSelect<false> | SignaturesSelect<true>;
    'temporary-app-users': TemporaryAppUsersSelect<false> | TemporaryAppUsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'fr' | 'en';
  user:
    | (Admin & {
        collection: 'admins';
      })
    | (AppUser & {
        collection: 'app-users';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface AppUserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: string;
  fullname: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supplier-categories".
 */
export interface SupplierCategory {
  id: string;
  name: string;
  /**
   * Le fichier doit être une image.
   */
  logo?: (string | null) | Media;
  product_suppliers: (string | SupplierProduct)[];
  offers?:
    | {
        name: string;
        /**
         * Le fichier doit être au format PDF.
         */
        file: string | Media;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  blurhash?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supplier-products".
 */
export interface SupplierProduct {
  id: string;
  name: string;
  suppliers: (string | Supplier)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "suppliers".
 */
export interface Supplier {
  id: string;
  name: string;
  website?: string | null;
  /**
   * Le fichier doit être une image.
   */
  logo_mini?: (string | null) | Media;
  /**
   * Le fichier doit être une image.
   */
  logo_full?: (string | null) | Media;
  /**
   * Le fichier doit être au format PDF.
   */
  brochure?: (string | null) | Media;
  contact_info?: {
    lastname?: string | null;
    firstname?: string | null;
    email?: string | null;
    /**
     * Séparez les numéros par une virgule si plusieurs.
     */
    phone?: string | null;
  };
  connexion?: {
    email?: string | null;
    password?: string | null;
  };
  other_information?: {
    /**
     * Séparez les thématiques par une virgule.
     */
    theme?: string | null;
    annotation?: string | null;
    subscription_fee?: string | null;
    duration?: string | null;
    rentability?: string | null;
    rentability_n1?: string | null;
    commission?: string | null;
    commission_public_offer?: string | null;
    commission_offer_group_valorem?: string | null;
    /**
     * Séparez les SCPI par une virgule.
     */
    scpi?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: string;
  name: string;
  category: string | ContactCategory;
  phone?: string | null;
  website?: string | null;
  latitude: string;
  longitude: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-categories".
 */
export interface ContactCategory {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fidnet".
 */
export interface Fidnet {
  id: string;
  date: string;
  /**
   * Le fichier doit être au format PDF.
   */
  file: string | Media;
  /**
   * Le fichier doit être une vidéo.
   */
  video: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fundesys".
 */
export interface Fundesy {
  id: string;
  date: string;
  /**
   * Le fichier doit être au format PDF.
   */
  file: string | Media;
  /**
   * Le fichier doit être une vidéo.
   */
  video: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reservations".
 */
export interface Reservation {
  id: string;
  title: string;
  invitations?:
    | {
        email: string;
        id?: string | null;
      }[]
    | null;
  day_reservation: string;
  start_time_reservation?: string | null;
  end_time_reservation?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "app-users".
 */
export interface AppUser {
  id: string;
  lastname: string;
  firstname: string;
  phone?: string | null;
  /**
   * Le fichier doit être une image.
   */
  photo?: (string | null) | Media;
  role: 'associate' | 'employee' | 'independent' | 'visitor';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agency-life".
 */
export interface AgencyLife {
  id: string;
  title: string;
  annotation?: string | null;
  type: 'general';
  event_start: string;
  event_end: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-rooms".
 */
export interface ChatRoom {
  id: string;
  app_user: string | AppUser;
  name: string;
  description?: string | null;
  color?: string | null;
  category?: string | null;
  private?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: string;
  app_user: string | AppUser;
  chat_room: string | ChatRoom;
  message?: string | null;
  file?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signatures".
 */
export interface Signature {
  id: string;
  app_user: string | AppUser;
  file: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "temporary-app-users".
 */
export interface TemporaryAppUser {
  id: string;
  email: string;
  role: 'associate' | 'employee' | 'independent' | 'visitor';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'admins';
        value: string | Admin;
      } | null)
    | ({
        relationTo: 'supplier-categories';
        value: string | SupplierCategory;
      } | null)
    | ({
        relationTo: 'contacts';
        value: string | Contact;
      } | null)
    | ({
        relationTo: 'fidnet';
        value: string | Fidnet;
      } | null)
    | ({
        relationTo: 'suppliers';
        value: string | Supplier;
      } | null)
    | ({
        relationTo: 'fundesys';
        value: string | Fundesy;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'reservations';
        value: string | Reservation;
      } | null)
    | ({
        relationTo: 'supplier-products';
        value: string | SupplierProduct;
      } | null)
    | ({
        relationTo: 'contact-categories';
        value: string | ContactCategory;
      } | null)
    | ({
        relationTo: 'app-users';
        value: string | AppUser;
      } | null)
    | ({
        relationTo: 'agency-life';
        value: string | AgencyLife;
      } | null)
    | ({
        relationTo: 'chat-rooms';
        value: string | ChatRoom;
      } | null)
    | ({
        relationTo: 'messages';
        value: string | Message;
      } | null)
    | ({
        relationTo: 'signatures';
        value: string | Signature;
      } | null)
    | ({
        relationTo: 'temporary-app-users';
        value: string | TemporaryAppUser;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'admins';
        value: string | Admin;
      }
    | {
        relationTo: 'app-users';
        value: string | AppUser;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'admins';
        value: string | Admin;
      }
    | {
        relationTo: 'app-users';
        value: string | AppUser;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  fullname?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supplier-categories_select".
 */
export interface SupplierCategoriesSelect<T extends boolean = true> {
  name?: T;
  logo?: T;
  product_suppliers?: T;
  offers?:
    | T
    | {
        name?: T;
        file?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  phone?: T;
  website?: T;
  latitude?: T;
  longitude?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fidnet_select".
 */
export interface FidnetSelect<T extends boolean = true> {
  date?: T;
  file?: T;
  video?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "suppliers_select".
 */
export interface SuppliersSelect<T extends boolean = true> {
  name?: T;
  website?: T;
  logo_mini?: T;
  logo_full?: T;
  brochure?: T;
  contact_info?:
    | T
    | {
        lastname?: T;
        firstname?: T;
        email?: T;
        phone?: T;
      };
  connexion?:
    | T
    | {
        email?: T;
        password?: T;
      };
  other_information?:
    | T
    | {
        theme?: T;
        annotation?: T;
        subscription_fee?: T;
        duration?: T;
        rentability?: T;
        rentability_n1?: T;
        commission?: T;
        commission_public_offer?: T;
        commission_offer_group_valorem?: T;
        scpi?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fundesys_select".
 */
export interface FundesysSelect<T extends boolean = true> {
  date?: T;
  file?: T;
  video?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  blurhash?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reservations_select".
 */
export interface ReservationsSelect<T extends boolean = true> {
  title?: T;
  invitations?:
    | T
    | {
        email?: T;
        id?: T;
      };
  day_reservation?: T;
  start_time_reservation?: T;
  end_time_reservation?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supplier-products_select".
 */
export interface SupplierProductsSelect<T extends boolean = true> {
  name?: T;
  suppliers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-categories_select".
 */
export interface ContactCategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "app-users_select".
 */
export interface AppUsersSelect<T extends boolean = true> {
  lastname?: T;
  firstname?: T;
  phone?: T;
  photo?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agency-life_select".
 */
export interface AgencyLifeSelect<T extends boolean = true> {
  title?: T;
  annotation?: T;
  type?: T;
  event_start?: T;
  event_end?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-rooms_select".
 */
export interface ChatRoomsSelect<T extends boolean = true> {
  app_user?: T;
  name?: T;
  description?: T;
  color?: T;
  category?: T;
  private?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  app_user?: T;
  chat_room?: T;
  message?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signatures_select".
 */
export interface SignaturesSelect<T extends boolean = true> {
  app_user?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "temporary-app-users_select".
 */
export interface TemporaryAppUsersSelect<T extends boolean = true> {
  email?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}